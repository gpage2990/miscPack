% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HDCurves.R
\name{ppmx.missing}
\alias{ppmx.missing}
\title{Function that fits Gaussian PPMx model with missing covariates}
\usage{
ppmx.missing(y,X,Xpred=NULL,
             psm=FALSE,PPM=FALSE,
             M=1,
             gcontype=1, gcattype=1,
             consim=1,calibrate=0,alpha=1,
             simParms=c(0.0, 1.0, 1.0, 1.0, 1.0, 0.1),
             modelPriors=c(0,10.0^2,0,10.0^2, 0,10.0,0,10),
             mh = c(0.5, 0.5),
             draws=11000,burn=1000,thin=10,
             verbose=FALSE)
}


\description{
\code{ppmx.missing} is the main function used to fit model with Guassian likelihood and PPMx as prior on partitions with missing covariates.

}

\arguments{
\item{y}{numeric vector containing response variable}
\item{X}{a data frame whose columns consist of covariates that will be incorporated in the partition model.
         Those with class of "character" or "factor" will be treated as categorical covaraites.  All others
         will be treated as continuous covariates.  Missing values should be NAs}

\item{Xpred}{a data frame containing covariate values for which out of sample predictions are desired.
             The format of Xpred must be the same as for X.}
\item{psm}{Logical with TRUE indicating that a patterns submodel be employed. FALSE indicates no covariates in the likelihood}
\item{PPM}{Logical with TRUE indicating that PPM should be used as partition prior. FALSE indicates PPMx be used}
\item{M}{Precision parameter.  Default is 1.}
\item{gcontype}{Type of similarity function that is employed for continuous covariates.  Options are

    1 - Auxilliary similarity,

    2 - Double dipper similarity}
\item{gcattype}{Type of similarity function that is employed for categorical covariates.  Options are

    1 - Auxilliary similarity,

    2 - Double dipper similarity}
\item{consim}{Type of similarty model employed for continuous covariates. Options are

    1 - N-N(m0, s20, v) (v variance of ''likelihood'', m0 and s20 ''prior'' parameters),

    2 - N-NIG(m0,s20, k0, nu0) (m0 and s20 center and scale of Gaussian, k0 and nu0 )}


\item{calibrate}{Whether the similarity should be calibrated.  Options are

    0 - no calibration

    1 - standardize similarity value for each covariate

    2 - coarsening is applied so that each similarity is raised to the 1/p power}

\item{alpha}{Penaly value for the Gower dissimilarity and variance similarities}

\item{simParms}{Vector of parameter values employed in the similarity function of the PPMx. Entries of the vector correspond to

    m0 - center of 'prior' for continuous similarity with default 0,

    s20 - spread of 'prior' continuous similarity with default 1,

    v2 - spread of 'likelihood' for conitnuous similarity (smaller values place more weight on covariate values within in cluster being similar)

    k0 - degrees of freedom upper for v (only used for N-NIG similarity model)

    nu0 - scale for v (only used for N-NIG similarity model)

    a0 - dirichlet weight for categorical similarity with default of 0.1 (smaller more weight placed on this variable)
}
\item{modelPriors}{Vector of prior parameter values employed in the data model. Entries of the vector correspond to

    mb - prior mean for beta with default equal to 0 (only used with psm=TRUE),

    s2b - prior variance beta with default equal to 100^2 (only used with psm=TRUE),

    m0 - prior mean for mu0 with default equal to 0,

    s20 - prior variance mu0 with default equal to 100^2,

    sigmax - upper bound on sigma*_j with default equal to 10

    sig0max - upper bound on sig0 with default equal to 10
}

\item{mh}{Tuning standard deviations for metropolis updates for sigma2 and sigma20 with default values of 0.5}

\item{draws}{Number of MCMC samples to collect}

\item{burn}{Number of the MCMC samples discarded in the burn-in phase of the sampler}

\item{thin}{The amount of thinning desired for the chain}

\item{verbose}{Logical indicating if MCMC progress be printed to screen.}
}
\details{
This function carries out posterior sampling based on Neal's algorithm 8.
}

\value{
This function returns in a list the missing matrix, and MCMC iterates of all model parameters.  If psm=TRUE, then a vector containing indicator of which missing pattern each subject and the number of observations in each missing pattern is also provided.
}
\examples{


\dontrun{

}

data(ozone)
dat <- ozone

dat <- dat[!is.na(dat$maxO3),] # remove any observations with missing response.
Xcon <- dat[,3:11] # don't keep max03v nor WindDirection


ntrain <- sample(1:nrow(Xcon), 75, replace=FALSE)

Xcontn <- Xcon[ntrain,,drop=FALSE]
Xcontt <- Xcon[-ntrain,,drop=FALSE]

ytn <- dat[ntrain,2]
ytt <- dat[-ntrain,2]




gctype <- 1


simParms <-         c(0.0, 1.0, 0.5, 1.0, 1.0, 0.1)
# the order here is c(mu0, s20,   v,   k0, nu0, a0)
# If simularity is N-NIG then k0 and nu0 are used but v is not
# If simularity is N-N then v is used but no k0 and nu0
# For categorical simularity a0 is Dirichlet weight

# These are priors for model
#                mub, s2b,   m0, s20,   sigmin, sigmax, sig0min, sig0max
modelPriors <- c(0,   10*10, 0,  100^2, 0,      5.0,    0,       10.0)

ndraws <- 50000
nburn <- 25000
nthin <- 25
nout <- (ndraws-nburn)/nthin

# Covariates only in prior on paritions (i.e,. PPMx)
out1 <- ppmx.missing(y=ytn, Xmat=Xcontn, Xpred=Xcontt,psm=FALSE,PPM=FALSE,
	M=1,gcontype=gctype,gcattype=gctype,
	simParms=simParms,modelPriors=modelPriors,
	consim=1,calibrate=0,alpha=1,
	draws=ndraws, burn=nburn,thin=nthin)

fitted <- apply(out1$mcmc$fitted,2,mean)
ppmn <- apply(out1$mcmc$ppred,2,mean)

mean((ytn - fitted)^2)

mean((ytt - ppmn)^2)


# Note that
#   psm = TRUE => covariates in likelihood (as a linear model)
#   psm = FALSE => covariates not in likelihood
#
#   If there are missing values, then psm = TRUE fits a different linear model for
#   each missing pattern.  If not, then psm = TRUE fits one global linear model
#
#   Note further that I standardize the x's before including them in the likelihood
#   or the prior on partitions.



# Covariates in likelihood using pattern submold and prior on paritions (i.e,. PPMx)

# need to identify different missing patterns
# Function that identifies individuals covariate configuration group
# Missing values are identified with NA.
covgrp <- function(Xcon=NULL, Xcat=NULL){

	out <- NULL
	X <- cbind(Xcon, Xcat)
	ncov <- dim(X)[2]
	Xlg <- is.na(X)
	unXlg <- unique(Xlg)
	g <- numeric()
	for(j in 1:dim(unXlg)[1]){
		g[apply(unXlg[j,] == t(Xlg),2,sum) == ncov] <- j
	}

	out$g <- g
	out$beta_dim <- apply(1-unXlg,1,sum)
	out
}

gvec <- covgrp(as.matrix(Xcon))$g


gvectn <- gvec[ntrain]
gvectt <- gvec[-ntrain]

nb <- apply(!is.na(Xcon), 1, sum)
nbtn <- nb[ntrain]
nbtt <- nb[-ntrain]

out2 <- ppmx.missing(y=ytn, Xmat=Xcontn, Xpred=Xcontt,psm=TRUE,PPM=FALSE,
	M=1,gcontype=gctype,gcattype=gctype,
	simParms=simParms,modelPriors=modelPriors,
	consim=1,calibrate=0,alpha=1,
	draws=ndraws, burn=nburn,thin=nthin)

fitted <- apply(out2$mcmc$fitted,2,mean)
ppmn <- apply(out2$mcmc$ppred,2,mean)


mean((ytn - fitted)^2)

mean((ytt - ppmn)^2)






}
